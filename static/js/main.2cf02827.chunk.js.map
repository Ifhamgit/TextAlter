{"version":3,"sources":["Components/Alert.js","Components/About.js","Components/Navbar.js","Components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","react_default","a","createElement","style","height","alert","className","concat","type","role","word","x","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","About","styling","color","mode","backgroundColor","Fragment","id","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","dist","to","title","aria-label","aria-current","onClick","toggleMode","aria-checked","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","heading","value","onChange","event","console","log","target","rows","disabled","length","newText","showAlert","SpeechSynthesisUtterance","window","speechSynthesis","speak","split","filter","element","defaultProps","App","SetMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","Components_Alert","react_router_dist","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.2cf02827.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize=(word)=>{\r\n        let x = word.toLowerCase()\r\n        return x.charAt(0).toUpperCase()+x.slice(1)\r\n    }\r\n  return (\r\n    <div style = {{height:\"50px\"}}> \r\n    {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n    <strong>{capitalize(props.alert.type)} </strong>: {props.alert.msg}\r\n    \r\n    </div>}\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n    // const[styling,newStyling] = useState( {\r\n    //     backgroundColor: \"white\",\r\n    //     color: \"black\"\r\n    //  })\r\n    \r\n   let styling = {\r\n    color: props.mode === \"dark\"?\"white\":'#131212',\r\n    backgroundColor: props.mode === \"light\"?\"white\":'#131212'\r\n   }\r\n  return (\r\n    <>\r\n        <div className=\"container my-2\" style={styling}>\r\n            <h1> About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\"style={styling}>\r\n        <div className=\"accordion-item\" style={styling}>\r\n            <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button className=\"accordion-button\" type=\"button\" style={styling} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                <strong> Creator</strong> \r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\">\r\n                 Hi! My name is Ifham and I am currently pursuing my B.tech degree, I have interst in web development.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"accordion-item\"style={styling}>\r\n            <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button className=\"accordion-button collapsed\"style={styling} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                <strong>App</strong>\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\">\r\n                I created this app to help you guys Alter a text in any way you want, UpperCase, LowerCase, Speech all these things you can do with this app in just a click.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"accordion-item\"style={styling}>\r\n            <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button className=\"accordion-button collapsed\"style={styling} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                <strong>Dark Mode</strong>\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\">\r\n                This app also has a dark mode for the nightowls, switch the button on the top right hand side.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        \r\n    </div>\r\n   \r\n</>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    \r\n\r\n    \r\n  return (\r\n    <>\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n            </li>\r\n            </ul>\r\n\r\n                {/* <div className=\"d-flex\">\r\n                    <div className=\"bg-primary rounded mx-2\" onClick={() => {props.toggleMode(\"primary\")}} style={{height:\"30px\", width:\"30px\", cursor:\"pointer\"}}></div>\r\n                    <div className=\"bg-danger rounded mx-2\" onClick={() => {props.toggleMode(\"danger\")}} style={{height:\"30px\", width:\"30px\", cursor:\"pointer\"}}></div>\r\n                    <div className=\"bg-success rounded mx-2\" onClick={() => {props.toggleMode(\"success\")}} style={{height:\"30px\", width:\"30px\", cursor:\"pointer\"}}></div>\r\n                    <div className=\"bg-warning rounded mx-2\" onClick={() => {props.toggleMode(\"warning\")}} style={{height:\"30px\", width:\"30px\", cursor:\"pointer\"}}></div>\r\n                    <div className=\"bg-light rounded mx-2\" onClick={() => {props.toggleMode(\"light\")}} style={{height:\"30px\", width:\"30px\", cursor:\"pointer\", border:\"100px\"}}></div>\r\n                    <div className=\"bg-dark rounded mx-2\" onClick={() => {props.toggleMode(\"dark\")}} style={{height:\"30px\", width:\"30px\", cursor:\"pointer\"}}></div>\r\n\r\n                                                                     {/* Onclick requires function inside and not any function calling hence we had to make \r\n                                                                     a arrow function and could not directly write onClick={props.toggleMode(\"warning\")} \r\n                {/* </div> */}\r\n            \r\n            \r\n\r\n        </div>\r\n        <div className={`form-check form-switch text-${props.mode===\"light\"?\"dark\":\"light\"} mx-3`}>\r\n        <input className=\"form-check-input\" /*onClick={()=> {props.toggleMode(null)}}*/ onClick={()=> {props.toggleMode()}} type=\"checkbox\" role=\"switch\" aria-checked=\"false\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n        </div>\r\n        </div>\r\n        \r\n    </nav>\r\n  </>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    About: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: \"Set title here\"\r\n}","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const upperCaseHandle =()=>{\r\n        console.log(\"Uppercase button was clicked\")\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Text has been converted into Uppercase\", \"success\")\r\n        \r\n\r\n    }\r\n    const OnChangeHandle =(event)=>{\r\n        console.log(\"OnChnage button was clicked\")\r\n        setText(event.target.value)\r\n    }\r\n    // const NoOfWords = () =>{\r\n    //   let numOfWords = 0;\r\n    //   let words = text.split(\" \");\r\n    //   let length = words.length;\r\n    //   numOfWords =\r\n    //     words[length - 1] === \"\" || words[length - 1] === \" \"\r\n    //       ? length - 1\r\n    //       : length;\r\n    //   console.log(words);\r\n    //   return numOfWords;\r\n    // }\r\n    const lowerCaseHandle = () =>{\r\n      let newText = text.toLowerCase()\r\n      setText(newText)\r\n      props.showAlert(\"Text has been converted into lowercase\", \"success\")\r\n   }\r\n    const cleartextHandle = () => {\r\n      let newText = \"\"\r\n      setText(newText)\r\n      props.showAlert(\"Text has been cleared\", \"success\")\r\n    }\r\n    const speak = () => {\r\n      let msg = new SpeechSynthesisUtterance();\r\n      msg.text = text;\r\n      window.speechSynthesis.speak(msg);\r\n      props.showAlert(\"Computer is speaking the text\", \"success\")\r\n    }\r\n\r\n    const[text,setText] = useState(\"\")\r\n    // setText(\"new value assigned to text\")\r\n  return (\r\n  <>\r\n    <div className=\"container\">\r\n      <h1 style = {{color :props.mode ===\"light\"?\"black\":\"white\"}}> {props.heading} </h1>\r\n      <div className=\"mb-3\">\r\n      <label htmlFor= \"MyBox\" className ={`form-label text-${props.mode===\"light\"?\"dark\":\"light\"}`}>Enter the text here</label>\r\n      <textarea className=\"form-control\" value={text} onChange={OnChangeHandle} style={{backgroundColor: props.mode===\"light\"?\"white\":\"#000000\",color:props.mode===\"light\"?\"black\":\"white\"}} id=\"MyBox\" rows=\"10\"></textarea>\r\n      </div>\r\n      <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={upperCaseHandle} id=\"butt1\"> Convert To UpperCase</button>\r\n      <button disabled={text.length===0}  className=\"btn btn-primary mx-2 my-1\" onClick={lowerCaseHandle} id=\"butt2\"> Convert To LowerCase</button>\r\n      <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={cleartextHandle} id=\"butt3\"> Clear all text</button>\r\n      <button disabled={text.length===0} className=\"btn btn-warning mx-2 my-1\" onClick={speak} id=\"butt3\"> Speak the text</button>\r\n    </div>\r\n\r\n    <div className=\"container my-3\" style = {{color :props.mode ===\"light\"?\"black\":\"white\"}}>\r\n      <h3>Your Text Summary</h3>\r\n      <p> {text.split(/\\s+/).filter((element)=>{ return element.length!==0}).length} words, {text.length} characters</p>\r\n      <p>Can be read in = {text.split(/\\s+/).filter((element)=>{ return element.length!==0}).length*0.008} minutes</p>\r\n      <h3>Preview</h3>\r\n      <p>{text.length >0?text:\"Type to preview your text here.\"}</p>\r\n    </div>\r\n  </>\r\n  )\r\n}\r\n","\nimport React,{ useState } from 'react';\nimport './App.css';\nimport Alert from './Components/Alert';\nimport About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  \n} from \"react-router-dom\";\n\n\nfunction App() {\n  const[mode, SetMode] = useState(\"light\")\n  const[alert,setAlert] = useState(null)\n\n  const showAlert =(message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n  })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n}\n    // const RemoveBodyClassesFromToggleModeCls =()=>{\n    //   document.body.classList.remove(\"bg-light\")\n    //   document.body.classList.remove(\"bg-dark\")\n    //   document.body.classList.remove(\"bg-danger\")\n    //   document.body.classList.remove(\"bg-warning\")\n    //   document.body.classList.remove(\"bg-success\")\n    //   document.body.classList.remove(\"bg-primary\")\n    // }\n\n\n\n\n                      //Here we are making a class as \"cls\" becuase \"class\" is a reserved keyword in JS\n                      //we define each color into cls to make its class and apply it on the body and \"null\" means no class or cls assigned.\n  //const toggleMode = (cls) =>{\n  const toggleMode = () =>{\n    //RemoveBodyClassesFromToggleModeCls()\n    //document.body.classList.add(\"bg-\"+cls)\n    if(mode === \"dark\"){\n      SetMode(\"light\")\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light mode has been enabled\", \"success\")\n      \n    \n    }else{\n      SetMode(\"dark\")\n      document.body.style.backgroundColor = '#131212'\n      showAlert(\"Dark mode has been enabled\", \"success\")\n    }\n  }\n  return (\n    <>\n      <Router>\n     <Navbar title = \"TextAlter\" mode ={mode} toggleMode ={toggleMode}/>\n     <Alert alert ={alert}/>\n     <div className=\"container my-3\">\n    \n     <Routes>\n            <Route path=\"/about\" element={<About mode ={mode} />}>\n            </Route>\n            <Route path=\"/\" element={<TextForm heading=\"Enter text to analyze\"  mode={mode} showAlert={showAlert} />}>\n            </Route>\n      </Routes>\n      \n     </div>\n     </Router>\n    </>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}